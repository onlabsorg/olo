(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/bin_math"],{

/***/ "./lib/bin-store/math.js":
/*!*******************************!*\
  !*** ./lib/bin-store/math.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! core-js/modules/es6.promise */ \"./node_modules/core-js/modules/es6.promise.js\");\n\n__webpack_require__(/*! core-js/modules/es6.regexp.to-string */ \"./node_modules/core-js/modules/es6.regexp.to-string.js\");\n\n__webpack_require__(/*! core-js/modules/es6.date.to-string */ \"./node_modules/core-js/modules/es6.date.to-string.js\");\n\n__webpack_require__(/*! core-js/modules/es6.object.to-string */ \"./node_modules/core-js/modules/es6.object.to-string.js\");\n\n__webpack_require__(/*! core-js/modules/es6.number.constructor */ \"./node_modules/core-js/modules/es6.number.constructor.js\");\n\n__webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar olojs = __webpack_require__(/*! olojs */ \"./lib/olojs/index.js\");\n\nvar isNumber = __webpack_require__(/*! lodash/isNumber */ \"./node_modules/lodash/isNumber.js\");\n\nvar isString = __webpack_require__(/*! lodash/isString */ \"./node_modules/lodash/isString.js\");\n\nexports.PI = Math.PI;\nexports.sin = Math.sin;\nexports.cos = Math.cos;\nexports.tan = Math.tan;\nexports.asin = Math.asin;\nexports.acos = Math.acos;\nexports.atan = Math.atan;\n\nexports[\"int\"] =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(value) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", isNumber(value) ? Math.round(value) : NOTHING);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.hex = function (numStr) {\n  return isString(numStr) ? Number(\"0x\".concat(numStr)) || NOTHING : NOTHING;\n};\n\nexports.oct = function (numStr) {\n  return isString(numStr) ? Number(\"0o\".concat(numStr)) || NOTHING : NOTHING;\n};\n\nexports.bin = function (numStr) {\n  return isString(numStr) ? Number(\"0b\".concat(numStr)) || NOTHING : NOTHING;\n};\n\nexports.min = function () {\n  return Math.min.apply(Math, arguments);\n};\n\nexports.max = function () {\n  return Math.max.apply(Math, arguments);\n};\n\nexports.toString = function () {\n  return exports.__text__;\n};\n\nexports.title = \"Binary module: math\";\nexports.__text__ = \"<p>\\nFind the documentation at <a href=\\\"/doc/binaries/math\\\">/doc/binaries/math</a>\\n</p>\";\n\n//# sourceURL=webpack:///./lib/bin-store/math.js?");

/***/ })

}]);