(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/stdlib/math"],{

/***/ "./node_modules/@onlabsorg/olojs/node_modules/@onlabsorg/swan-js/lib/stdlib/math.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@onlabsorg/olojs/node_modules/@onlabsorg/swan-js/lib/stdlib/math.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nmodule.exports = {\n\n    // E\n    // Euler's constant and the base of natural logarithms, approximately 2.718.\n    E: Math.E,\n\n    // PI\n    // Ratio of the a circle's circumference to its diameter, approximately 3.14159.\n    PI: Math.PI,\n\n    // abs(x)\n    // Returns the absolute value of a number.\n    abs: Math.abs,\n\n    // acos(x)\n    // Returns the arccosine of a number.\n    acos: Math.acos,\n\n    // acosh(x)\n    // Returns the hyperbolic arccosine of a number.\n    acosh: Math.acosh,\n\n    // asin(x)\n    // Returns the arcsine of a number.\n    asin: Math.asin,\n\n    // asinh(x)\n    // Returns the hyperbolic arcsine of a number.\n    asinh: Math.asinh,\n\n    // atan(x)\n    // Returns the arctangent of a number.\n    atan: Math.atan,\n\n    // atanh(x)\n    // Returns the hyperbolic arctangent of a number.\n    atanh: Math.atanh,\n\n    // ceil(x)\n    // Returns the smallest integer greater than or equal to a number.\n    ceil: Math.ceil,\n\n    // cos(x)\n    // Returns the cosine of a number.\n    cos: Math.cos,\n\n    // cosh(x)\n    // Returns the hyperbolic cosine of a number.\n    cosh: Math.cosh,\n\n    // exp(x)\n    // Returns Ex, where x is the argument, and E is Euler's constant (2.718…, the base of the natural logarithm).\n    exp: Math.exp,\n\n    // floor(x)\n    // Returns the largest integer less than or equal to a number.\n    floor: Math.floor,\n\n    // log(x)\n    // Returns the natural logarithm (㏒e, also, ㏑) of a number.\n    log: Math.log,\n\n    // log10(x)\n    // Returns the base 10 logarithm of a number.\n    log10: Math.log10,\n\n    // max([x[, y[, …]]])\n    // Returns the largest of zero or more numbers.\n    max: Math.max,\n\n    // min([x[, y[, …]]])\n    // Returns the smallest of zero or more numbers.\n    min: Math.min,\n\n    // random()\n    // Returns a pseudo-random number between 0 and 1.\n    random: Math.random,\n\n    // round(x)\n    // Returns the value of a number rounded to the nearest integer.\n    round: Math.round,\n\n    // sin(x)\n    // Returns the sine of a number.\n    sin: Math.sin,\n\n    // sinh(x)\n    // Returns the hyperbolic sine of a number.\n    sinh: Math.sinh,\n\n    // sqrt(x)\n    // Returns the positive square root of a number.\n    sqrt: Math.sqrt,\n\n    // tan(x)\n    // Returns the tangent of a number.\n    tan: Math.tan,\n\n    // tanh(x)\n    // Returns the hyperbolic tangent of a number.\n    tanh: Math.tanh,\n\n    // trunc(x)\n    // Returns the integer part of the number x, removing any fractional digits.\n    trunc: Math.trunc,    \n}\n\n\n//# sourceURL=webpack:///./node_modules/@onlabsorg/olojs/node_modules/@onlabsorg/swan-js/lib/stdlib/math.js?");

/***/ })

}]);