<% title = "URI namespace" %>
<% __render__ = import("/bin/markdown") %>
<% test = import("/lib/test") %>

<% doc = import("/lib/importee?x=1&s=abc#docfragment") %>

The `URI` namespace contains the following information about the document's URI:

* `URI.scheme` is the scheme (http, https, etc.) of this document's URI                                                         <% test.check(URI.scheme == "http" or URI.scheme == "https") %>
* `URI.host` is the host part (wiki.onlabs.org) of this document's URI                                                          <% test.check(URI.host == "localhost" or URI.host == "wiki.onlabs.org") %>
* `URI.path` is the path part (/doc/expression/uri) of this document's URI                                                      <% test.check(URI.path == "/doc/expression/uri" and doc.URI.path == "/lib/importee") %>
* `URI.fragment` is the fragment part (the one after the '#' symbol) of the document's URI                                      <% test.check(doc.URI.fragment == "docfragment") %>
* `URI.query` is a namespace containing the variables in the query part (the one after the '?' symbol) of the document's URI    <% test.check(doc.URI.query == {x=1, s="abc"}) %>

<% indexURI = URI.resolve("../index") %>
Furthermore, the `URI` namespace contains a `resolve` function that takes a relative
uri as parameter and resolves it to a global uri. For expample `URI.resolve("../index")` 
should return a the URI namespace with same root as this URI and path `/doc/index`.
<% test.check(indexURI.root == URI.root and indexURI.path == "/doc/index") %>

When stringified, the URI namespace returns an URI string.
<% test.check(str(doc.URI) == "http://localhost:8010/lib/importee?s=abc&x=1#docfragment") %>


